// Generated by CoffeeScript 1.6.3
(function() {
  var sync_object;

  window.test = function() {
    var countdown, num;
    return countdown = (function() {
      var _i, _results;
      _results = [];
      for (num = _i = 10; _i >= 1; num = --_i) {
        _results.push(num);
      }
      return _results;
    })();
  };

  window.problem1 = function(number) {
    var countdown, sum, x, _i, _j, _len, _ref, _results;
    countdown = (function() {
      _results = [];
      for (var _i = 1, _ref = number - 1; 1 <= _ref ? _i <= _ref : _i >= _ref; 1 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this);
    sum = 0;
    for (_j = 0, _len = countdown.length; _j < _len; _j++) {
      x = countdown[_j];
      if (x % 3 === 0 || x % 5 === 0) {
        sum = sum + x;
      }
    }
    return sum;
  };

  window.fib = function(number) {
    var sum, x, y, z;
    x = 1;
    y = 1;
    z = 0;
    sum = 0;
    while (x < 4000000) {
      z = x;
      x = x + y;
      y = z;
      if (x % 2 === 0) {
        sum = sum + x;
      }
    }
    if (x % 2 === 0) {
      sum = sum - x;
    }
    return console.log(sum3);
  };

  window.prime = function(number) {
    var x;
    x = 2;
    while ((number > 1) && (number >= x)) {
      if (number % x === 0) {
        number = number / x;
        console.log(x);
      } else {
        x = x + 1;
      }
    }
    return number;
  };

  window.tp = function(testnumb) {
    var x;
    x = String(testnumb).length;
    if (String(testnumb)[0] === String(testnumb)[5] && String(testnumb)[1] === String(testnumb)[4] && String(testnumb)[2] === String(testnumb)[3]) {
      return true;
    } else {
      return false;
    }
  };

  window.palendrome = function(x, y) {
    var a, b, max, prod, _i, _j, _results;
    max = 0;
    for (x = _i = 999; _i >= 100; x = --_i) {
      for (y = _j = 999; _j >= 100; y = --_j) {
        prod = x * y;
        if (tp(prod)) {
          if (prod > max) {
            max = prod;
          }
        }
      }
    }
    console.log(max);
    _results = [];
    while (prod > 99999) {
      if (tp(prod)) {
        console.log(x, y, prod);
        _results.push(prod = 0);
      } else {
        x = x - a % 2;
        y = y - b % 2;
        a = a + 1;
        b = b + 1;
        _results.push(prod = x * y);
      }
    }
    return _results;
  };

  sync_object = {
    "GDrive": {
      "key": "424243246254-n6b2v8j4j09723ktif41ln247n75pnts.apps.googleusercontent.com",
      "scope": "https://www.googleapis.com/auth/drive",
      "app_name": "alexapp"
    },
    "Dropbox": {
      "key": "q5yx30gr8mcvq4f",
      "secret": "qy64qphr70lwui5",
      "app_name": "alexapp"
    }
  };

  Nimbus.Auth.setup(sync_object);

}).call(this);
