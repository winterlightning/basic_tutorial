// Generated by CoffeeScript 1.5.0
(function() {
  var sync_object;

  window.list = [1, 2, 3, 4, 5];

  window.Obj = {
    name: "Nick",
    number: "2022622722",
    height: "72"
  };

  window.sumarray = function(number_array) {
    var total, x, _i, _len;
    total = 0;
    for (_i = 0, _len = number_array.length; _i < _len; _i++) {
      x = number_array[_i];
      total = total + x;
    }
    return console.log(total);
  };

  window.sum1 = function(number) {
    var number_array, total, x, _i, _j, _len, _ref, _results, _results1;
    number_array = (function() {
      _results = [];
      for (var _i = 1, _ref = number - 1; 1 <= _ref ? _i <= _ref : _i >= _ref; 1 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this);
    total = 0;
    _results1 = [];
    for (_j = 0, _len = number_array.length; _j < _len; _j++) {
      x = number_array[_j];
      if (x % 3 === 0 || x % 5 === 0) {
        total = total + x;
        _results1.push(console.log(total));
      } else {
        _results1.push(void 0);
      }
    }
    return _results1;
  };

  window.fib = function(number) {
    var sum, x, y, z;
    x = 1;
    y = 1;
    z = 0;
    sum = 0;
    while (x < number) {
      z = x;
      x = x + y;
      y = z;
      if (x % 2 === 0) {
        sum = sum + x;
      }
      console.log(x);
    }
    console.log(sum);
    return 2;
  };

  window.clickhandler = function() {
    return $(".toggle").click(function() {
      console.log("test");
      return $(this).hide();
    });
  };

  sync_object = {
    "GDrive": {
      "key": "424243246254-n6b2v8j4j09723ktif41ln247n75pnts.apps.googleusercontent.com",
      "scope": "https://www.googleapis.com/auth/drive",
      "app_name": "diaryapp"
    },
    "Dropbox": {
      "key": "q5yx30gr8mcvq4f",
      "secret": "qy64qphr70lwui5",
      "app_name": "diaryapp"
    }
  };

  Nimbus.Auth.setup(sync_object);

  window.Todo = Nimbus.Model.setup("Todo", ["done", "description"]);

  window.createTodo = function(description, done) {
    var instance;
    return instance = Todo.create({
      "description": description,
      "done": done
    });
  };

  window.render_todo = function() {
    var todostring, x, _i, _len, _ref, _results;
    $(".list").html("");
    _ref = Todo.all();
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      x = _ref[_i];
      if (x.done === true) {
        todostring = "<li>" + x.description + '<div class="toggle active"> <div class="toggle-handle"></div> </div>' + "</li>";
      } else {
        todostring = "<li>" + x.description + '<div class="toggle"> <div class="toggle-handle"></div> </div>' + "</li>";
      }
      _results.push($(".list").append(todostring));
    }
    return _results;
  };

}).call(this);
